name: Release - Staging

on:
  push:
    branches:
      - main

  workflow_dispatch:

concurrency:
  group: deploy-to-staging
  cancel-in-progress: true

jobs:
  lint-and-test:
    runs-on: [self-hosted, macOS]
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Install dependencies
        run: yarn install

      - name: Lint Backend
        run: yarn lint:backend

      - name: Lint Frontend
        run: yarn lint:frontend

      - name: Test Backend
        run: yarn test:backend

      - name: Test Staged Backend Files
        run: yarn testBE:staged

      - name: Test Frontend
        run: yarn test:frontend

      - name: Prettier Frontend
        run: yarn prettier:frontend

  deploy-to-staging:
    runs-on: [self-hosted, macOS]
    timeout-minutes: 10

    needs:
      - lint-and-test

    env:
      BASE_URL: ${{ vars.CDN_ENDPOINT }}

    environment:
      name: staging
      url: ${{ vars.CDN_ENDPOINT }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create .env file
        id: variables
        run: |
          echo "BASE_URL=${{ env.BASE_URL }}" >> .env
          echo "DB_URL=${{ vars.DB_URL }}" >> .env
          echo "NODE_ENV=${{ vars.NODE_ENV }}" >> .env
          echo "DB_HOST=${{ vars.DB_HOST }}" >> .env
          echo "DB_PORT=${{ vars.DB_PORT }}" >> .env
          echo "DB_USERNAME=${{ vars.DB_USERNAME }}" >> .env
          echo "DB_PASSWORD=${{ vars.DB_PASSWORD }}" >> .env
          echo "DB_DATABASE=${{ vars.DB_DATABASE }}" >> .env
          echo "ACCESS_TOKEN_SECRET=${{ vars.ACCESS_TOKEN_SECRET }}" >> .env
          echo "REFRESH_TOKEN_SECRET=${{ vars.REFRESH_TOKEN_SECRET }}" >> .env
          echo "REFRESH_TOKEN_EXPIRATION=${{ vars.REFRESH_TOKEN_EXPIRATION }}" >> .env
          echo "MAIL_USER=${{ vars.MAIL_USER }}" >> .env
          echo "MAIL_PASSWORD=${{ vars.MAIL_PASSWORD }}" >> .env
          echo "MAIL_SENDER=${{ vars.MAIL_SENDER }}" >> .env
          echo "values=$(cat .env | tr '\n' ',' | sed 's/,$//')" >> $GITHUB_OUTPUT

      - name: Update amplify environment variables
        run: aws amplify update-branch --app-id ${{ vars.AMPLIFY_APP_ID }} --branch-name main --environment-variables ${{ steps.variables.outputs.values }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: eu-central-1

      - name: Start amplify deployment
        run: aws amplify start-job --app-id ${{ vars.AMPLIFY_APP_ID }} --branch-name main --job-type RELEASE
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: eu-central-1
